
    if (registers.PC == 0xFFFF){
        printf("AF-0x%04x,BC-0x%04x,DE-0x%04x,HL-0x%04x,SP-0x%04x,PC-0x%04x\n",registers.AF,registers.BC,registers.DE,registers.HL,registers.SP,registers.PC);
        printf("P1  -0x%02x, SB  -0x%02x, SC  -0x%02x, DIV -0x%02x, TIMA-0x%02x, TMA -0x%02x, TAC -0x%02x\n",memory[0xFF00],memory[0xFF01],memory[0xFF02],memory[0xFF04],memory[0xFF05],memory[0xFF06],memory[0xFF07]);
        printf("IF  -0x%02x, NR10-0x%02x, NR11-0x%02x, NR12-0x%02x, NR13-0x%02x, NR14-0x%02x, NR21-0x%02x\n",memory[0xFF0F],memory[0xFF10],memory[0xFF11],memory[0xFF12],memory[0xFF13],memory[0xFF14],memory[0xFF16]);
        printf("NR22-0x%02x, NR23-0x%02x, NR24-0x%02x, NR30-0x%02x, NR31-0x%02x, NR32-0x%02x, NR33-0x%02x\n",memory[0xFF17],memory[0xFF18],memory[0xFF19],memory[0xFF1A],memory[0xFF1B],memory[0xFF1C],memory[0xFF1D]);
        printf("NR34-0x%02x, NR41-0x%02x, NR42-0x%02x, NR43-0x%02x, NR44-0x%02x, NR50-0x%02x, NR51-0x%02x, NR52-0x%02x\n",memory[0xFF1E],memory[0xFF20],memory[0xFF21],memory[0xFF22],memory[0xFF23],memory[0xFF24],memory[0xFF25],memory[0xFF26]);

        printf("LCDC-0x%02x, STAT-0x%02x, SCY -0x%02x, SCX -0x%02x, LY  -0x%02x, LYC -0x%02x\n",memory[0xFF40],memory[0xFF41],memory[0xFF42],memory[0xFF43],memory[0xFF44],memory[0xFF45]);
        printf("DMA -0x%02x, BGB -0x%02x, OBP0-0x%02x, OBP1-0x%02x, WY  -0x%02x, WX  -0x%02x, IE  -0x%02x\n",memory[0xFF46],memory[0xFF47],memory[0xFF48],memory[0xFF49],memory[0xFF4A],memory[0xFF4B],memory[0xFFFF]);
        //exit(1);
        debug = TRUE;
    }
    
    
    
    
    rrrrrrr
    
    /*	int carry = testFlag(CARRY_F);
	
    if (registers.A & 0x80) 
       setFlag(CARRY_F);
	else 
       resetFlag(CARRY_F);
	
	registers.A <<= 1;
	registers.A += carry;
	
    resetFlag(SUBSTRACT_F);
    resetFlag(HALF_CARRY_F);
    
    if (registers.A == 0){
        setFlag(ZERO_F);
    }
    else{
        resetFlag(ZERO_F);
    }
 } */



/*
void RLCA (void){
    
    if (registers.A & 0x80){
        setFlag(CARRY_F);
    }
    else{
        resetFlag(CARRY_F);
    }
    
    registers.A <= 1;
    registers.A |= testFlag(CARRY_F);
    
    if (registers.A == 0){
        setFlag(ZERO_F);
    }
    else{
        resetFlag(ZERO_F);
    }
    
    resetFlag(HALF_CARRY_F);
    resetFlag(SUBSTRACT_F);
}*/


/*    
    int carry = testFlag(CARRY_F);
	
    if (registers.A & 0x01) 
       setFlag(CARRY_F);
	else 
       resetFlag(CARRY_F);
	
	registers.A >>= 1;
    
    if (carry)
	   registers.A |= 0x80;
	
    resetFlag(SUBSTRACT_F);
    resetFlag(HALF_CARRY_F);
    
    resetFlag(ZERO_F);
    }
*/

 
 /*
	int carry = testFlag(CARRY_F);
	if (registers.A & 0x80) 
       setFlag(CARRY_F);
	else 
       resetFlag(CARRY_F);
	
	registers.A <<= 1;
	registers.A += carry;
	
    resetFlag(SUBSTRACT_F);
    resetFlag(HALF_CARRY_F);
    
    if (registers.A == 0){
        setFlag(ZERO_F);
    }
    else{
        resetFlag(ZERO_F);
    }
 }
*/