0.90.6
    - Serial emulation updated
    - Total rewrite of memory module
    - MBC handling improvement

0.90.5
    - Minor Update to Makefiles

0.90.4
    - Merge

0.90.3
    - Initial Sound support

0.86.9
    - Fix Window Bug
    - Fix SRAM Bug
    - Dragonball now playable

0.86.8
    - Add support for hardware reset key F9

0.86.7
    - Minor input fix
    - Dummy serial port implementation

0.86.6
    - Minor fix to MBC1 enable RAM

0.86.5
    - Gave some love to RAM_bank_enabled
    - Fixed input at last (needs playtesting) 

0.86.4
    - Some minor fixes? to MBC2 support. Still no luck with Japan..
    
0.86.2
    - SDL support comeback. You may use make -f Makefile.sdl to create SDL build
    - Huge speedup for SDL. Now polling for events every 100 cpu cycles
    - New option in definitions for VSYNC. Needed to make emulator playable in logical speedup
    - SDL event polling until no more events. Please check the issue

alam
    - MBC2 Save/Load, one file per cartridge
    - debugging still needed with Japan MBC2 cartridges like Dragonball Z
    (just like obj folder is manually created, sram folder will be needed
     @ the same level)

alam
    - Beta MBC2 support
    - Save - Load supported only for one cartridge at a time
    - debugging needed with Japan MBC2 cartridges, try eg. Dragonball Z
    - Mystic quest is playable our beloved Mitso/Baiba 

bobonis
    - Fixed all opcode timings

bobonis
    - Fix reading MBC1

bobonis
    - Fix LD_nn_SP writting 16 bit instead of 8
    - Most games boot now!!!

bobonis
    - fix Stack reading / writing Most significant part first

bobonis
    - fix ADC overwritting CARRY
    - fix SBC false checking greater than zero
    - fix sign casting, should use (signed char)

bobonis
    - DIV timer
    - Fix rr not setting CARRY
    - Fix add16 not settich correct HALFCARRY
    - Fix POP_AF to always set 4LSB of F register to zero
    - Fix DDA
    - Fix RRA to reset ZERO. CPU manual has fault
    - First CPU test rom pass!!

bobonis
    - Finished most opcodes

bobonis
    - MBC1 implementation
    - Finished CB opcodes

bobonis
    - dummy implementation of HALT opcode

bobonis
    - RLCA
    - SWAP
    - moar keas

bobonis
    - Sprites seem to work!
    - Transperacy and axis flip
    - Fixed input

bobonis
    - adc function had a little error. It was first calculating the carry
      and then was adding it to REGISTER A. We should first do the addition
      and then calculate the CARRY.
    - Well, adc was causing the problem to the sprites. We need transperacy but
      they are ok!

bobonis
    - more work on spites, Tetris is ok, Asteroids sucks
    - Now pressing "p" will pause the execution for 1 second

bobonis
    - Fixed rom booting after BIOS
        (Problem was bios overwrote memory address 0x00-0x100)
    - New switchable debug variable in cpu.c
    - Implemented all extended opcodes for BIT OPERATIONS

bobonis
    - Check LCDC register to draw background and / or sprites
    - Taso check add function for 0x86 opcode. Changed HALFCARRY and ZERO
    - Bios locks at checksum (After changed 0x86 ZERO no more locks)
    - [ERROR] Opcode 0x3a not implemented

Bobonis
    - Many changes from both bakg and alam Finally some progress!

bobonis
    - Hardcoded FF00 at DF. It's at writememory. We should implement INPUT

bobonis
    - Global use of readMemory and writeMemory in cpu.c

bobonis
    - Bios boot is now switchable via USINGBIOS flag in memory.h

bobonis
    - Finally it clears correctly the screen, Drawing seems ok now!
    - Changed framebuffer coordinates its [height][width][colour] now

alam
   - stackPop16 bugb
   - more Opcodes
   
alam
    - RET bug
    - stackPop16 possible bug
    - some Opcodes
    
bobonis
    - new file display.c and its header
    - create SDL opengl window reading from framebuffer
    - Window now closes correctly !!

alam
    - Fixed opcode 0xFA
    - Implemented "family" LD r1,r2

bobonis
    - Comment out SDL until there is some progress done
    - Fixed opcode 0xFE

bobonis
    - Finished work on backround
    - Started working on SDL window 

alam
    - Enrich DEBUG printout with the name of the opcode
    - Started working on opcodes

bobonis
    - Most of work done for GPU timers and registers.

bobonis
    - Started working on GPU

bobonis
    - Two new functions in memory.c to read from memory. readMemory8 and readMemory16
    - Fixed jumps to handle signed chars (needs testing)
    - I've tested running of Tetris so far in comparison with cinoop. 100% match!!! Well Done!
    

bobonis
    - Updated flag handling so when manual say that a register is set if condition
      then I reset it if condition is not met

bobonis
    - Implemented stack with pushStack and popStack
    - Implemented interrupts
    - Updated cpu.c and cpu.h structure

bobonis
    - Added two new functions in memory: readMemory and writeMemory
    - Added two new functions in memory: setBit and testBit
    - Made some corrections to if syntax shame shame shame
    - Implement timer functions
    - test git
    
bobonis
    - changed debug output in cpu.c
    - moved bioslogo declaration to rom.c to get rid of warning
    - included rom.h in main.c declarations to get rid of warning
    - added dummy functions for gpu timers input and interrups
    - moved header files under include folder
